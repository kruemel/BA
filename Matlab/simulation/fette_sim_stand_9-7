clear; clf; close all;
start_date = datetime(2016,4,13);
%%%%% Erstelle Zustandsraummodelle %%%%%

% iddata-Objekte fuer n4sid (input + output aus jedem Ringknoten)

start = (datenum(start_date)-datenum(2016,1,1))*24*60+1;
ende = start+24*60*3-1;               % 3 Tage
startsim = ende + 1;
endsim = startsim + 1439;

eNames = {'est1';'est2';'est3';'est4';'est5';'val1';'val2';'val3';'val4';'val5'};

for i=1:5
   [est_data.(eNames{i}),est_data.(eNames{i+5})] = est(i,start,ende); 
end

% Systemidentifikation mit n4sid

sNames = {'tvor1';'tvor2';'tvor3';'tvor4';'tvor5';'ss1';'ss2';'ss3';'ss4';'ss5';
    'x0_1';'x0_2';'x0_3';'x0_4';'x0_5'};

for i=1:5
    if i == 2
        [tv.(sNames{i}),SS.(sNames{i+5}),SS.(sNames{i+10})] = modelsim(est_data.(eNames{i}),est_data.(eNames{i+5}),2);
    else
        [tv.(sNames{i}),SS.(sNames{i+5}),SS.(sNames{i+10})] = modelsim(est_data.(eNames{i}),est_data.(eNames{i+5}),0);
    end
    figure(i);
    h = plot(est_data.(eNames{i+5}),tv.(sNames{i}));
    setoptions(h,'TimeUnits','hours');
    title(['WMZ',int2str(i)]);
end

%%%%% Berechne Volumenstroeme aus statischem Modell %%%%%%

% Erstelle Matrix
M = sysident(start_date+2);

% Berechne alle fuenf Volumenstroeme (24h)
v_calc = plot_val(start_date+3,M);


%%%%% Berechne durchschnittliche Waermeleistung der letzten 3 Tage an den
%%%%% Knotenpunkten des Ring-WMZ

wae = load('/home/kathrin/Uni/BA/Fette Daten/corrected_data/waerme_wmz.mat');

vNames = {'Q1','Q2','Q3','Q4','Q5'};
for i=1:5
   %q_calc.(vNames{i}) = mean(reshape(wae.waerme.(vNames{i})(start:ende),[1440 3]),2);
   q_calc.(vNames{i}) = smooth(mean(reshape(wae.waerme.(vNames{i})(start:ende),[1440 3]),2),21);   %mit Glättung
end

% Plotte Waermeleistung

figure(7);
for i=1:5
   subplot(2,3,i);
   plot(wae.waerme.time(startsim:endsim),wae.waerme.(vNames{i})(startsim:endsim),wae.waerme.time(startsim:endsim),q_calc.(vNames{i}));
end
legend('gemessen','berechnet','Location', 'best');

%%%%% Berechne Ruecklauf-Temperatur an den Knotenpunkten des Ring-WMZ

k = 4.182*1000/3600;        % cp * rho * Umrechnung h<->sek
rNames = {'Tr1','Tr2','Tr3','Tr4','Tr5'};

for i=1:5
    tr.(rNames{i}) = tv.(sNames{i}).y - q_calc.(vNames{i})./(k*v_calc(:,i));
    %tr.(rNames{i}) = (k*v_calc(:,i).*tv.(sNames{i}).y-q_calc.(vNames{i}))./(k*v_calc(:,i)); 
end

% Plotte Rücklauftemperatur
tr_m = load('/home/kathrin/Uni/BA/Fette Daten/corrected_data/trueck.mat');
figure(8);
for i=1:5
   subplot(2,3,i);
   plot(wae.waerme.time(startsim:endsim),tr_m.trueck.(rNames{i})(startsim:endsim),wae.waerme.time(startsim:endsim),smooth(tr.(rNames{i}),21));
end
legend('gemessen','berechnet','Location', 'best');
